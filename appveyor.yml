environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: remove_dir_all
  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    # Beta channel
    - TARGET: i686-pc-windows-gnu
      RUST_VERSION: beta
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: beta

    - TARGET: i686-pc-windows-msvc
      RUST_VERSION: beta
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: beta

    # Nightly channel
    - TARGET: i686-pc-windows-gnu
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: nightly

    - TARGET: i686-pc-windows-msvc
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly

matrix:
  allow_failures:
    - RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% &&
      cargo run --target %TARGET% --release
    )
